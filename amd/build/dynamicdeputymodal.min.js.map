{"version":3,"file":"dynamicdeputymodal.min.js","sources":["../src/dynamicdeputymodal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     mod_booking\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\n\nconst SELECTORS = {\n    TRIGGERMODALBUTTON: 'button[data-id=\"booking-booked-users-open-deputy-modal\"]'\n};\n\nexport const init = () => {\n\n    const container = document.querySelector('body');\n    if (!container) {\n        return;\n    }\n\n    // Add one event listener only once\n    if (!container.dataset.deputyButtonDelegated) {\n        container.dataset.deputyButtonDelegated = 'true';\n\n        container.addEventListener('click', (e) => {\n            const button = e.target.closest(\n                SELECTORS.TRIGGERMODALBUTTON\n            );\n            if (!button) {\n                return;\n            }\n            deputySelectModal(button);\n        });\n    }\n};\n\n/**\n * Show modal to select deputies.\n * @param {htmlElement} button\n */\nexport function deputySelectModal(button) {\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"mod_booking\\\\form\\\\dynamicdeputyselect\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {},\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('adddeputies', 'mod_booking')},\n        returnFocus: button\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        e.preventDefault();\n        window.location.reload();\n    });\n    // Show the form.\n    modalForm.show();\n}"],"names":["SELECTORS","deputySelectModal","button","modalForm","ModalForm","formClass","args","modalConfig","title","returnFocus","addEventListener","events","FORM_SUBMITTED","e","preventDefault","window","location","reload","show","container","document","querySelector","dataset","deputyButtonDelegated","target","closest"],"mappings":";;;;;mMAwBMA,6BACkB,oEA8BRC,kBAAkBC,cAExBC,UAAY,IAAIC,mBAAU,CAG5BC,UAAW,yCAEXC,KAAM,GAENC,YAAa,CAACC,OAAO,mBAAU,cAAe,gBAC9CC,YAAaP,SAIjBC,UAAUO,iBAAiBP,UAAUQ,OAAOC,gBAAiBC,IACzDA,EAAEC,iBACFC,OAAOC,SAASC,YAGpBd,UAAUe,qBA9CM,WAEVC,UAAYC,SAASC,cAAc,QACpCF,YAKAA,UAAUG,QAAQC,wBACnBJ,UAAUG,QAAQC,sBAAwB,OAE1CJ,UAAUT,iBAAiB,SAAUG,UAC3BX,OAASW,EAAEW,OAAOC,QACpBzB,8BAECE,QAGLD,kBAAkBC"}